### Inferred type ###

\Nat :1 Type.
  \Z :2 Nat.
    \S :3 (n :L Nat) -> Nat.
      S -4- Z

  : (Nat :1 Type) -> (Z :2 Nat) -> (S :3 (n :L Nat) -> Nat) -> Nat

### Constraints ###

  [] -> Nat ~ Nat
  [] -> Type ~ Type
  [I] -> Type ~ Type

  [I] -> I
  [I] -> I
  [I] -> I
  [] -> 3
  [4] -> 2

  (4,L)

### Solving ###

-> iteration 1
  evar updates:
    2 -> L
    3 -> L
    4 -> L

  rechecking eqs:
    Nat ~ Nat
    Type ~ Type

  new constraints from conversion:



-> iteration 2

### Final solution ###

  2 -> L
  3 -> L
  4 -> L

### Fully annotated program ###

\Nat :I Type.
  \Z :L Nat.
    \S :L (n :L Nat) -> Nat.
      S -L- Z

### Erase: irrelevant data ###

\Z : Nat.
  \S : (n : Nat) -> Nat.
    S Z

### Erase: non-runtime data ###

\Z S.
  S Z
